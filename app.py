import streamlit as st
import pandas as pd
import plotly.express as px
import gspread
from oauth2client.service_account import ServiceAccountCredentials

st.set_page_config(page_title="Unidades Interligadas", layout="wide")
st.title("üìå Dashboard Unidades Interligadas")

# Conex√£o Google Sheets
scope = ["https://spreadsheets.google.com/feeds", 'https://www.googleapis.com/auth/drive']
credentials = ServiceAccountCredentials.from_json_keyfile_name('credenciais.json', scope)
gc = gspread.authorize(credentials)

sheet = gc.open_by_url("https://docs.google.com/spreadsheets/d/1cWbDNgy8Fu75FvXLvk-q2RQ0X-n7OsXq/edit")

# -------------------- ABA 1: UNIDADES INTERLIGADAS --------------------
st.sidebar.title("üîé Filtros - Unidades Interligadas")
worksheet_ui = sheet.worksheet('UNIDADES INTERLIGADAS')
df_ui = pd.DataFrame(worksheet_ui.get_all_records())

municipios = st.sidebar.multiselect("Selecione os Munic√≠pios", df_ui['MUNIC√çPIOS'].unique(), default=df_ui['MUNIC√çPIOS'].unique())

df_filtered = df_ui[df_ui['MUNIC√çPIOS'].isin(municipios)]

st.subheader("üè• Unidades Interligadas")
col1, col2, col3 = st.columns(3)
col1.metric("Total Hospitais", df_filtered.shape[0])
col2.metric("Com Justi√ßa Aberta", df_filtered['JUSTI√áA ABERTA'].value_counts().get("Sim", 0))
col3.metric("Habilita√ß√£o CRC OK", df_filtered['HABILITA√á√ÉO CRC'].value_counts().get("Habilitado", 0))

fig = px.bar(df_filtered.sort_values('√çNDICES IBGE', ascending=False), x="MUNIC√çPIOS", y="√çNDICES IBGE", color="SITUA√á√ÉO GERAL", title="Distribui√ß√£o por Munic√≠pios")
st.plotly_chart(fig)

pie_fig = px.pie(df_filtered, names="SITUA√á√ÉO GERAL", title="Situa√ß√£o Geral")
st.plotly_chart(pie_fig)

st.sidebar.download_button("üì• Baixar Dados", df_filtered.to_csv(index=False), file_name="unidades_interligadas.csv")

# -------------------- ABA 2: STATUS RECEB FORMUL√ÅRIO --------------------
st.subheader("üìÑ Status Recebimento Formul√°rio")
worksheet_status = sheet.worksheet('STATUS RECEB FORMULARIO')
df_status = pd.DataFrame(worksheet_status.get_all_records())

status = st.multiselect("Status Geral", df_status['STATUS GERAL RECEBIMENTO'].unique(), default=df_status['STATUS GERAL RECEBIMENTO'].unique())
df_status_filtered = df_status[df_status['STATUS GERAL RECEBIMENTO'].isin(status)]

st.dataframe(df_status_filtered)
st.metric("Formul√°rios Enviados", df_status_filtered['STATUS GERAL RECEBIMENTO'].value_counts().get("Enviado", 0))

st.sidebar.download_button("üì• Baixar Status Formul√°rio", df_status_filtered.to_csv(index=False), file_name="status_formulario.csv")

# -------------------- ABA 3 & 4: MUNIC√çPIOS PARA INSTALAR --------------------
st.subheader("üöß Munic√≠pios em Fase de Instala√ß√£o")
worksheet_inst1 = sheet.worksheet('MUNIC√çPIOS PARA INSTALAR')
df_inst1 = pd.DataFrame(worksheet_inst1.get_all_records())

worksheet_inst2 = sheet.worksheet('MUNIC√çPIOS PARA INSTALAR2')
df_inst2 = pd.DataFrame(worksheet_inst2.get_all_records())

df_instalacao = pd.concat([df_inst1, df_inst2], ignore_index=True)
fase = st.multiselect("Fase de Instala√ß√£o", df_instalacao['FASE'].unique(), default=df_instalacao['FASE'].unique())
df_instalacao_filtered = df_instalacao[df_instalacao['FASE'].isin(fase)]

st.dataframe(df_instalacao_filtered)
fig_fase = px.bar(df_instalacao_filtered, x="MUNIC√çPIOS EM FASE DE INSTALA√á√ÉO (PROV. 07):", color="FASE", title="Distribui√ß√£o por Fase")
st.plotly_chart(fig_fase)
st.sidebar.download_button("üì• Baixar Munic√≠pios Instala√ß√£o", df_instalacao_filtered.to_csv(index=False), file_name="municipios_instalacao.csv")

# -------------------- ABA 5: MUN. INVI√ÅVEIS DE INSTALA√á√ÉO --------------------
st.subheader("‚ùå Munic√≠pios Inv√°iveis")
worksheet_inv = sheet.worksheet('MUN. INVI√ÅVEIS DE INSTALA√á√ÉO')
df_inv = pd.DataFrame(worksheet_inv.get_all_records())

st.dataframe(df_inv)
fig_inv = px.pie(df_inv, names="SITUA√á√ÉO", title="Situa√ß√£o dos Munic√≠pios Inv√°iveis")
st.plotly_chart(fig_inv)
st.sidebar.download_button("üì• Baixar Munic√≠pios Inv√°iveis", df_inv.to_csv(index=False), file_name="municipios_inviaveis.csv")

# -------------------- ABA 6: PROVIMENTO 09 --------------------
st.subheader("üìú Provimento 09 ‚Äì TCT")
worksheet_tct = sheet.worksheet('PROVIMENTO 09')
df_tct = pd.DataFrame(worksheet_tct.get_all_records())

col1, col2 = st.columns(2)
col1.write("### MUNIC√çPIOS QUE ASSINARAM O TCT")
col1.dataframe(df_tct['MUNIC√çPIOS QUE ASSINARAM O TCT'].dropna())

col2.write("### MUNIC√çPIOS V√ÉO ASSINAR O TCT")
col2.dataframe(df_tct['MUNIC√çPIOS V√ÉO ASSINAR O TCT'].dropna())

st.sidebar.download_button("üì• Baixar Provimento 09", df_tct.to_csv(index=False), file_name="provimento09.csv")

st.success("‚úÖ Dashboard carregado com sucesso!")
