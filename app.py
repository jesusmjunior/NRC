import streamlit as st
import pandas as pd
import altair as alt

# Link da planilha do Google Sheets (compartilhada publicamente)
sheet_url = "https://docs.google.com/spreadsheets/d/1cWbDNgy8Fu75FvXLvk-q2RQ0X-n7OsXq/export?format=csv&id=1cWbDNgy8Fu75FvXLvk-q2RQ0X-n7OsXq&gid=666685797"

# Carregar os dados do Google Sheets
@st.cache_data
def load_data():
    """Fun칞칚o para carregar dados da planilha do Google Sheets"""
    return pd.read_csv(sheet_url)

# Carregar os dados na vari치vel df
df = load_data()

# Verificar as colunas do DataFrame (para diagn칩stico)
st.write("Colunas do DataFrame:", df.columns)

# Configura칞칚o do Dashboard
st.set_page_config(page_title="Dashboard Interativo - Sistema de Sa칰de", layout="wide")
st.title("游늵 Dashboard Interativo - Sistema de Sa칰de")

# Filtros din칙micos na barra lateral
st.sidebar.header("游댍 Filtros")
municipios = st.sidebar.multiselect("Selecione os Munic칤pios", df["Munic칤pios"].unique(), default=df["Munic칤pios"].unique())  # Ajuste o nome da coluna se necess치rio
esferas = st.sidebar.multiselect("Selecione as Esferas", df["Esferas"].unique(), default=df["Esferas"].unique())

# Aplicar filtros aos dados
df_filtrado = df[df["Munic칤pios"].isin(municipios) & df["Esferas"].isin(esferas)]

# Exibir os dados filtrados
st.write(f"### 游늷 {df_filtrado.shape[0]} Registros Selecionados")
st.dataframe(df_filtrado)

# Fun칞칫es para gr치ficos de distribui칞칚o com Altair
def plot_unidades_interligadas(df):
    """Gr치fico de unidades interligadas por Munic칤pios"""
    st.write("### 游늵 Distribui칞칚o das Unidades Interligadas por Munic칤pios")
    chart = alt.Chart(df).mark_bar().encode(
        x='Munic칤pios',
        y='칈ndices IBGE',
        tooltip=['Munic칤pios', '칈ndices IBGE']
    ).properties(title="Distribui칞칚o por 칈ndice IBGE")
    st.altair_chart(chart, use_container_width=True)

def plot_status_formulario(df):
    """Gr치fico de status de recebimento de formul치rios"""
    st.write("### 游늵 Status de Recebimento de Formul치rios")
    chart = alt.Chart(df).mark_arc().encode(
        theta='count():Q',
        color='Status Geral Recebimento:N',
        tooltip=['Status Geral Recebimento', 'count():Q']
    ).properties(title="Status Geral de Recebimento")
    st.altair_chart(chart, use_container_width=True)

def plot_municipios_instalacao(df):
    """Gr치fico de Munic칤pios em Fase de Instala칞칚o"""
    st.write("### 游늵 Munic칤pios em Fase de Instala칞칚o")
    chart = alt.Chart(df).mark_bar().encode(
        x='Munic칤pios',
        y='Fase do Processo',
        tooltip=['Munic칤pios', 'Fase do Processo']
    ).properties(title="Fase do Processo de Instala칞칚o")
    st.altair_chart(chart, use_container_width=True)

def plot_municipios_inviaveis(df):
    """Gr치fico de Munic칤pios Invi치veis de Instala칞칚o"""
    st.write("### 游늵 Munic칤pios Invi치veis de Instala칞칚o")
    chart = alt.Chart(df).mark_bar().encode(
        x='Munic칤pios',
        y='Situa칞칚o',
        tooltip=['Munic칤pios', 'Situa칞칚o']
    ).properties(title="Situa칞칚o dos Munic칤pios Invi치veis")
    st.altair_chart(chart, use_container_width=True)

def plot_termo_cooperacao(df):
    st.write("### 游늵 Termo de Coopera칞칚o (Provis칚o 09)")
    chart = alt.Chart(df).mark_arc().encode(
        theta='count():Q',
        color='Munic칤pios que Assinaram o TCT:N',
        tooltip=['Munic칤pios que Assinaram o TCT', 'count():Q']
    ).properties(title="Termo de Coopera칞칚o Assinado ou Pendente")
    st.altair_chart(chart, use_container_width=True)

def plot_operadores(df):
    st.write("### 游늵 Operadores e Respons치veis")
    chart = alt.Chart(df).mark_bar().encode(
        x='UI e Serventia Conveniada',
        y='Operador/Preposto da UI',
        tooltip=['UI e Serventia Conveniada', 'Operador/Preposto da UI']
    ).properties(title="Operadores Respons치veis")
    st.altair_chart(chart, use_container_width=True)

def plot_acompanhamento_articulacao(df):
    st.write("### 游늵 Acompanhamento de Articula칞칚o")
    chart = alt.Chart(df).mark_bar().encode(
        x='Munic칤pios',
        y='Por Ano (2022)',
        tooltip=['Munic칤pios', 'Por Ano (2022)']
    ).properties(title="Acompanhamento Articula칞칚o")
    st.altair_chart(chart, use_container_width=True)

# Se칞칫es do Dashboard
tabs = [
    "Unidades Interligadas", "Status Recebimento Formul치rio", "Munic칤pios em Fase de Instala칞칚o",
    "Munic칤pios Invi치veis de Instala칞칚o", "Termo de Coopera칞칚o", "Operadores",
    "Hospitais das UI", "Acompanhamento Articula칞칚o"
]

# Barra lateral para escolha de se칞칚o
selected_tab = st.sidebar.selectbox("Escolha a Se칞칚o", tabs)

# Exibindo gr치ficos e informa칞칫es com base na se칞칚o escolhida
if selected_tab == "Unidades Interligadas":
    plot_unidades_interligadas(df_filtrado)
elif selected_tab == "Status Recebimento Formul치rio":
    plot_status_formulario(df_filtrado)
elif selected_tab == "Munic칤pios em Fase de Instala칞칚o":
    plot_municipios_instalacao(df_filtrado)
elif selected_tab == "Hospitais das UI":
    plot_operadores(df_filtrado)
elif selected_tab == "Acompanhamento Articula칞칚o":
    plot_acompanhamento_articulacao(df_filtrado)
elif selected_tab == "Munic칤pios Invi치veis de Instala칞칚o":
    plot_municipios_inviaveis(df_filtrado)
elif selected_tab == "Termo de Coopera칞칚o":
    plot_termo_cooperacao(df_filtrado)

# Baixar dados filtrados
st.sidebar.download_button("游닌 Baixar Dados Filtrados", df_filtrado.to_csv(index=False), "dados_filtrados.csv", "text/csv")
