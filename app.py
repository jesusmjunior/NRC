import streamlit as st
import pandas as pd
import altair as alt

# Link da planilha do Google Sheets (compartilhada publicamente)
sheet_url = "https://docs.google.com/spreadsheets/d/1cWbDNgy8Fu75FvXLvk-q2RQ0X-n7OsXq/export?format=csv&id=1cWbDNgy8Fu75FvXLvk-q2RQ0X-n7OsXq&gid=666685797"

# Carregar os dados do Google Sheets
@st.cache_data
def load_data():
    """Fun칞칚o para carregar dados da planilha do Google Sheets"""
    return pd.read_csv(sheet_url)

# Carregar os dados na vari치vel df
df = load_data()

# Configura칞칚o do Dashboard
st.set_page_config(page_title="Painel Gerencial 01 NRC", layout="wide")
st.title("游늵 Painel Gerencial 01 NRC")

# Filtros din칙micos na barra lateral
st.sidebar.header("游댍 Filtros")
municipios = st.sidebar.multiselect("Selecione os Munic칤pios", df["MUNIC칈PIOS"].unique(), default=df["MUNIC칈PIOS"].unique())  # Usando o nome exato da coluna
esferas = st.sidebar.multiselect("Selecione as Esferas", df["ESFERA"].unique(), default=df["ESFERA"].unique())  # Usando o nome exato da coluna

# Aplicar filtros aos dados
df_filtrado = df[df["MUNIC칈PIOS"].isin(municipios) & df["ESFERA"].isin(esferas)]

# Exibir os dados filtrados
st.write(f"### 游늷 {df_filtrado.shape[0]} Registros Selecionados")
st.dataframe(df_filtrado)

# Fun칞칫es para gr치ficos de distribui칞칚o com Altair

def plot_unidades_interligadas(df):
    st.write("### 游늵 Distribui칞칚o das Unidades Interligadas por Munic칤pios")
    chart = alt.Chart(df).mark_bar().encode(
        x='MUNIC칈PIOS',
        y='칈NDICES IBGE',
        tooltip=['MUNIC칈PIOS', '칈NDICES IBGE']
    ).properties(title="Distribui칞칚o por 칈ndice IBGE")
    st.altair_chart(chart, use_container_width=True)

def plot_status_formulario(df):
    st.write("### 游늵 Status de Recebimento de Formul치rios")
    chart = alt.Chart(df).mark_arc().encode(
        theta='count():Q',
        color='STATUS GERAL RECEBIMENTO',
        tooltip=['STATUS GERAL RECEBIMENTO', 'count():Q']
    ).properties(title="Status Geral de Recebimento")
    st.altair_chart(chart, use_container_width=True)

def plot_municipios_instalacao(df):
    st.write("### 游늵 Munic칤pios em Fase de Instala칞칚o")
    chart = alt.Chart(df).mark_bar().encode(
        x='MUNIC칈PIOS EM FASE DE INSTALA칂츾O (PROV. 07):',
        y='FASE',
        tooltip=['MUNIC칈PIOS EM FASE DE INSTALA칂츾O (PROV. 07):', 'FASE']
    ).properties(title="Fase do Processo de Instala칞칚o")
    st.altair_chart(chart, use_container_width=True)

def plot_municipios_inviaveis(df):
    st.write("### 游늵 Munic칤pios Invi치veis de Instala칞칚o")
    chart = alt.Chart(df).mark_bar().encode(
        x='MUNIC칈PIOS',
        y='SITUA칂츾O',
        tooltip=['MUNIC칈PIOS', 'SITUA칂츾O']
    ).properties(title="Situa칞칚o dos Munic칤pios Invi치veis")
    st.altair_chart(chart, use_container_width=True)

# Se칞칫es do Dashboard
tabs = [
    "Unidades Interligadas", "Status Recebimento Formul치rio", "Munic칤pios em Fase de Instala칞칚o",
    "Munic칤pios Invi치veis de Instala칞칚o"
]

# Barra lateral para escolha de se칞칚o
selected_tab = st.sidebar.selectbox("Escolha a Se칞칚o", tabs)

# Exibindo gr치ficos e informa칞칫es com base na se칞칚o escolhida
if selected_tab == "Unidades Interligadas":
    plot_unidades_interligadas(df_filtrado)
elif selected_tab == "Status Recebimento Formul치rio":
    plot_status_formulario(df_filtrado)
elif selected_tab == "Munic칤pios em Fase de Instala칞칚o":
    plot_municipios_instalacao(df_filtrado)
elif selected_tab == "Munic칤pios Invi치veis de Instala칞칚o":
    plot_municipios_inviaveis(df_filtrado)

# Baixar dados filtrados
st.sidebar.download_button("游닌 Baixar Dados Filtrados", df_filtrado.to_csv(index=False), "dados_filtrados.csv", "text/csv")
